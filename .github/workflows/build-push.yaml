name: Build & Push

on:
  workflow_run:
    workflows: [ "Lint & Test" ]
    branches:
      - main
    types:
      - completed


jobs:
  build:
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push'
    name: Build
    runs-on: ubuntu-latest

    steps:
      # Create a commit SHA-based tag for the container repositories.
      - name: Create SHA Container Tag
        id: sha_tag
        run: |
          tag=$(cut -c 1-7 <<< $GITHUB_SHA)
          echo "::set-output name=tag::$tag"
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      # Build and push the container to the GitHub Container
      # Repository. The container will be tagged as "latest"
      # and with the short SHA of the commit.
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:latest
          cache-to: type=inline
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.sha_tag.outputs.tag }}

#  deploy:
#    needs: build
#    name: Deploy
#    runs-on: ubuntu-latest
#
#    # Deploy and release to Heroku.
#    steps:
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to Heroku Container Registry
#        uses: docker/login-action@v1
#        with:
#          registry: registry.heroku.com
#          username: _
#          password: ${{ secrets.HEROKU_API_KEY }}
#
#      - name: Push Image to Heroku
#        uses: akhilerm/tag-push-action@v1.0.0
#        with:
#          src: ghcr.io/${{ github.repository }}:latest
#          dst: registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/worker
#
#      - name: Authenticate to Heroku
#        uses: akhileshns/heroku-deploy@v3.12.12
#        with:
#          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
#          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
#          heroku_email: ${{ secrets.HEROKU_EMAIL }}
#          justlogin: true
#
#      - name: Release to Heroku
#        run: |
#          heroku container:login
#          heroku container:release worker -a ${{ secrets.HEROKU_APP_NAME }}
